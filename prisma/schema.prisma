generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model customers {
  id         Int       @id @default(autoincrement())
  user_id    Int
  name       String?   @db.VarChar
  email      String?   @db.VarChar
  phone      String?   @db.VarChar
  address    String?   @db.VarChar
  created_at DateTime? @db.Timestamp(6)
  updated_at DateTime? @db.Timestamp(6)
  sales      sales[]
  user       users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model expenses {
  id          Int       @id @default(autoincrement())
  user_id     Int?
  description String?   @db.VarChar
  amount      Decimal?  @db.Decimal(10, 2)
  date        DateTime? @db.Timestamp(6)
  category    String?   @db.VarChar
  created_at  DateTime? @db.Timestamp(6)
  updated_at  DateTime? @db.Timestamp(6)
  users       users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model inventory {
  id                     Int                      @id @default(autoincrement())
  user_id                Int
  name                   String?                  @db.VarChar
  description            String?                  @db.VarChar
  quantity_in_stock      Int?
  cost_price             Decimal?                 @db.Decimal(10, 2)
  selling_price          Decimal?                 @db.Decimal(10, 2)
  supplier_id            Int?
  created_at             DateTime?                @db.Timestamp(6)
  updated_at             DateTime?                @db.Timestamp(6)
  suppliers              suppliers?               @relation(fields: [supplier_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  inventory_transactions inventory_transactions[]
  purchase_items         purchase_items[]
  sales_items            sales_items[]
  user                   users                    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model inventory_transactions {
  id               Int        @id @default(autoincrement())
  user_id          Int
  inventory_id     Int?
  transaction_type String?    @db.VarChar
  quantity_change  Int?
  date             DateTime?  @db.Timestamp(6)
  reference_type   String?    @db.VarChar
  reference_id     Int?
  created_at       DateTime?  @db.Timestamp(6)
  updated_at       DateTime?  @db.Timestamp(6)
  inventory        inventory? @relation(fields: [inventory_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user             users      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model purchase_items {
  id           Int        @id @default(autoincrement())
  user_id      Int
  purchase_id  Int?
  inventory_id Int?
  quantity     Int?
  unit_price   Decimal?   @db.Decimal(10, 2)
  total_price  Decimal?   @db.Decimal(10, 2)
  created_at   DateTime?  @db.Timestamp(6)
  updated_at   DateTime?  @db.Timestamp(6)
  inventory    inventory? @relation(fields: [inventory_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  purchases    purchases? @relation(fields: [purchase_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user         users      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model purchases {
  id             Int              @id @default(autoincrement())
  user_id        Int
  supplier_id    Int?
  purchase_date  DateTime?        @db.Timestamp(6)
  total_amount   Decimal?         @db.Decimal(10, 2)
  created_at     DateTime?        @db.Timestamp(6)
  updated_at     DateTime?        @db.Timestamp(6)
  purchase_items purchase_items[]
  suppliers      suppliers?       @relation(fields: [supplier_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user           users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model sales {
  id           Int           @id @default(autoincrement())
  user_id      Int
  customer_id  Int?
  sale_date    DateTime?     @db.Timestamp(6)
  total_amount Decimal?      @db.Decimal(10, 2)
  created_at   DateTime?     @db.Timestamp(6)
  updated_at   DateTime?     @db.Timestamp(6)
  customers    customers?    @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  sales_items  sales_items[]
  
  user         users      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model sales_items {
  id           Int        @id @default(autoincrement())
  user_id      Int
  sale_id      Int?
  inventory_id Int?
  quantity     Int?
  unit_price   Decimal?   @db.Decimal(10, 2)
  total_price  Decimal?   @db.Decimal(10, 2)
  created_at   DateTime?  @db.Timestamp(6)
  updated_at   DateTime?  @db.Timestamp(6)
  inventory    inventory? @relation(fields: [inventory_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  sales        sales?     @relation(fields: [sale_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user         users      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model suppliers {
  id           Int         @id @default(autoincrement())
  user_id      Int
  name         String?     @db.VarChar
  contact_info String?     @db.VarChar
  created_at   DateTime?   @db.Timestamp(6)
  updated_at   DateTime?   @db.Timestamp(6)
  inventory    inventory[]
  purchases    purchases[]
  user         users       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  id                        Int                       @id @default(autoincrement())
  username                  String?                   @db.VarChar @unique
  password                  String?                   @db.VarChar
  role                      String?                   @db.VarChar
  email                     String?                   @db.VarChar @unique
  created_at                DateTime?                 @db.Timestamp(6)
  updated_at                DateTime?                 @db.Timestamp(6)
  expenses                  expenses[]
  customers                 customers[]
  suppliers                 suppliers[]
  inventory                 inventory[]
  purchases                 purchases[]
  purchase_items            purchase_items[]
  inventory_transactions    inventory_transactions[]
  sales                     sales[]
  sales_items               sales_items[]
}
